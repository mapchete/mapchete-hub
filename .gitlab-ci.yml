image: registry.gitlab.eox.at/maps/docker-base/mapchete:2025.5.1

stages:
  - codecheck
  - build
  - test
  - build_image
  - push

.login_registries:
  before_script:
    - export AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID_673042305043}
    - export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY_673042305043}

precommit:
  stage: codecheck
  tags:
    - privileged
  image: registry.gitlab.eox.at/maps/docker-base/python:3.13-slim-bookworm
  before_script:
    - apt update && apt install -y --no-install-recommends git
    - pip install pre-commit
  script:
    - pre-commit run --all-files

# build python packages
build_python_package:
  tags:
    - 'privileged'
  stage: build
  artifacts:
    paths:
      - dist/
  before_script:
    - pip install
      --extra-index-url https://__token__:${EOX_PYPI_TOKEN}@gitlab.eox.at/api/v4/projects/255/packages/pypi/simple
      --upgrade hatch
  script:
    - hatch build

# test python packages
test_python_wheel:
  tags:
    - 'privileged'
  needs: ["build_python_package"]
  stage: test
  before_script:
    - pip install
      --extra-index-url https://__token__:${EOX_PYPI_TOKEN}@gitlab.eox.at/api/v4/projects/255/packages/pypi/simple    
      `ls dist/mapchete_hub*.tar.gz -1 | head -1`[test]
  script:
    - mhub-server --help
    - pytest -v --cov=mapchete_hub tests/

test_python_tar:
  tags:
    - 'privileged'
  needs: ["build_python_package"]
  stage: test
  before_script:
    - pip install
      --extra-index-url https://__token__:${EOX_PYPI_TOKEN}@gitlab.eox.at/api/v4/projects/255/packages/pypi/simple    
      `ls dist/mapchete_hub*.tar.gz -1 | head -1`[test]
  script:
    - mhub-server --help
    - pytest -v --cov=mapchete_hub tests/

# run unittests
test_unit:
  tags:
    - 'privileged'
  stage: test
  timeout: 30m
  variables:
    EOX_PYPI_TOKEN: ${EOX_PYPI_TOKEN}
  before_script:
    - pip install --upgrade pip
    - pip install -r requirements_test.txt
    - pip install
      --extra-index-url https://__token__:${EOX_PYPI_TOKEN}@gitlab.eox.at/api/v4/projects/255/packages/pypi/simple
      --upgrade
      -e .[complete]
  script:
    - pytest -v --cov=mapchete_hub tests/
  after_script:
    - coverage report

# build image for mhub
build_image:
  image: quay.io/podman/stable:v4.9.4
  tags:
    - 'privileged'
  stage: build_image
  artifacts:
    paths:
      - pip/
  before_script:
    - podman --version && CONTAINER_ENGINE=${CONTAINER_ENGINE:="podman"} || CONTAINER_ENGINE=${CONTAINER_ENGINE:="docker"}      
    - echo -n $CI_JOB_TOKEN | $CONTAINER_ENGINE login -u gitlab-ci-token --password-stdin $CI_REGISTRY
  script:
    # build
    - >
      $CONTAINER_ENGINE build \
        --build-arg BASE_IMAGE_NAME=mapchete \
        --build-arg EOX_PYPI_TOKEN=${EOX_PYPI_TOKEN} \
        --layers \
        --cache-to ${CI_REGISTRY_IMAGE}/cache \
        --cache-from ${CI_REGISTRY_IMAGE}/cache \
        -t ${CI_REGISTRY_IMAGE}/mhub:${CI_COMMIT_SHORT_SHA} .
    # push
    - $CONTAINER_ENGINE push ${CI_REGISTRY_IMAGE}/mhub:${CI_COMMIT_SHORT_SHA}
    - >
      $CONTAINER_ENGINE tag \
        ${CI_REGISTRY_IMAGE}/mhub:${CI_COMMIT_SHORT_SHA} \
        ${CI_REGISTRY_IMAGE}/mhub:${CI_COMMIT_REF_NAME}
    - >
      $CONTAINER_ENGINE push \
        ${CI_REGISTRY_IMAGE}/mhub:${CI_COMMIT_REF_NAME}
  after_script:
    # run pip check
    - >
      $CONTAINER_ENGINE run \
        --rm \
        -t ${CI_REGISTRY_IMAGE}/mhub:${CI_COMMIT_SHORT_SHA} \
        /bin/bash -c "pip check"
    # dump installed package versions as artefact
    - mkdir pip
    - >
      $CONTAINER_ENGINE run \
        --rm \
        -t ${CI_REGISTRY_IMAGE}/mhub:${CI_COMMIT_SHORT_SHA} \
        /bin/bash -c "pip freeze" > pip/mhub_installed.txt
    - less pip/mhub_installed.txt

build_push_to_aws_registry:
  stage: push
  extends: .login_registries
  variables:
    DOCKER_TLS_CERTDIR: ""
    DOCKER_HOST: tcp://docker:2375
    AWS_DEFAULT_REGION: eu-central-1   
  tags:
    - dind
  only:
    - tags
  image:
    name: registry.gitlab.eox.at/eox/hub/qhub-images/aws-gitlab:0-2.7.35
    entrypoint: [""]
  services:
    - docker:dind
  script:
    - echo -n $CI_JOB_TOKEN | docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY      
    - docker pull ${CI_REGISTRY_IMAGE}/mhub:${CI_COMMIT_REF_NAME}
    - aws ecr get-login-password --region ${AWS_DEFAULT_REGION} | docker login --username AWS --password-stdin 673042305043.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com
    - docker tag ${CI_REGISTRY_IMAGE}/mhub:${CI_COMMIT_REF_NAME} 673042305043.dkr.ecr.eu-central-1.amazonaws.com/mhub:${CI_COMMIT_REF_NAME}
    - docker push 673042305043.dkr.ecr.eu-central-1.amazonaws.com/mhub:${CI_COMMIT_REF_NAME}

# release package
push_python_package:
  tags:
    - 'privileged'
  stage: push
  before_script:
    - pip install
      --extra-index-url https://__token__:${EOX_PYPI_TOKEN}@gitlab.eox.at/api/v4/projects/255/packages/pypi/simple    
      --upgrade pip hatch
  script:
    - hatch publish -r https://gitlab.eox.at/api/v4/projects/255/packages/pypi dist/mapchete_hub*
  only:
    - tags
