image: registry.gitlab.eox.at/maps/docker-base/mapchete:2023.11.0

stages:
  - build
  - test
  - push

before_script:
  - echo -n $CI_JOB_TOKEN | podman login -u gitlab-ci-token --password-stdin $CI_REGISTRY

# build python packages
build_python_package:
  tags:
    - podman
  stage: build
  artifacts:
    paths:
      - dist/
  before_script:
    - pip install
      --extra-index-url https://__token__:${EOX_PYPI_TOKEN}@gitlab.eox.at/api/v4/projects/255/packages/pypi/simple
      --upgrade hatch
  script:
    - hatch build

# test python packages
test_python_wheel:
  tags:
    - podman
  needs: ["build_python_package"]
  stage: test
  before_script:
    - pip install
      --extra-index-url https://__token__:${EOX_PYPI_TOKEN}@gitlab.eox.at/api/v4/projects/255/packages/pypi/simple    
      `ls dist/mapchete_hub*.tar.gz -1 | head -1`[test]
  script:
    - mhub-server --help
    - pytest -v --cov=mapchete_hub tests/

test_python_tar:
  tags:
    - podman
  needs: ["build_python_package"]
  stage: test
  before_script:
    - pip install
      --extra-index-url https://__token__:${EOX_PYPI_TOKEN}@gitlab.eox.at/api/v4/projects/255/packages/pypi/simple    
      `ls dist/mapchete_hub*.tar.gz -1 | head -1`[test]
  script:
    - mhub-server --help
    - pytest -v --cov=mapchete_hub tests/

# run unittests
test_unit:
  tags:
    - podman
  stage: test
  timeout: 30m
  variables:
    EOX_PYPI_TOKEN: ${EOX_PYPI_TOKEN}
  before_script:
    - pip install --upgrade pip
    - pip install -r requirements_test.txt
    - pip install
      --extra-index-url https://__token__:${EOX_PYPI_TOKEN}@gitlab.eox.at/api/v4/projects/255/packages/pypi/simple
      --upgrade
      -e .[complete]
  script:
    - pytest -v --cov=mapchete_hub tests/
  after_script:
    - coverage report

# build image for mhub
build_image:
  image: quay.io/podman/stable
  tags:
    - podman
  stage: push
  artifacts:
    paths:
      - pip/
  before_script:
    - echo -n $CI_JOB_TOKEN | podman login -u gitlab-ci-token --password-stdin $CI_REGISTRY
  script:
    # build
    - >
      podman build \
        --build-arg BASE_IMAGE_NAME=mapchete \
        --build-arg EOX_PYPI_TOKEN=${EOX_PYPI_TOKEN} \
        -t ${CI_REGISTRY_IMAGE}/mhub:${CI_COMMIT_SHORT_SHA} .
    # push
    - podman push ${CI_REGISTRY_IMAGE}/mhub:${CI_COMMIT_SHORT_SHA}
    - >
      podman tag \
        ${CI_REGISTRY_IMAGE}/mhub:${CI_COMMIT_SHORT_SHA} \
        ${CI_REGISTRY_IMAGE}/mhub:${CI_COMMIT_REF_NAME}
    - >
      podman push \
        ${CI_REGISTRY_IMAGE}/mhub:${CI_COMMIT_REF_NAME}
  after_script:
    # run pip check
    - >
      podman run \
        --rm \
        -t ${CI_REGISTRY_IMAGE}/mhub:${CI_COMMIT_SHORT_SHA} \
        /bin/bash -c "pip check"
    # dump installed package versions as artefact
    - mkdir pip
    - >
      podman run \
        --rm \
        -t ${CI_REGISTRY_IMAGE}/mhub:${CI_COMMIT_SHORT_SHA} \
        /bin/bash -c "pip freeze" > pip/mhub_installed.txt
    - less pip/mhub_installed.txt

# # test mapchete_hub package in built images
# test_integration:
#   stage: test
#   needs: ["build_image"]
#   timeout: 30m
#   variables:
#     EOX_PYPI_TOKEN: ${EOX_PYPI_TOKEN}
#     IMAGE_NAME: mhub
#     BASE_IMAGE_NAME: mapchete
#     MHUB_ENV: testing
#   script:
#     # run tests
#     - /bin/sh run_integration_tests.sh

# release package
push_python_package:
  tags:
    - podman
  stage: push
  before_script:
    - pip install
      --extra-index-url https://__token__:${EOX_PYPI_TOKEN}@gitlab.eox.at/api/v4/projects/255/packages/pypi/simple    
      --upgrade pip hatch
  script:
    - hatch publish -r https://gitlab.eox.at/api/v4/projects/255/packages/pypi dist/mapchete_hub*
  only:
    - tags
